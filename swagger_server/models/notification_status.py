# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NotificationStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, subject: str=None, _from: str=None, timestamp: int=None, status: str=None, sent_on: int=None, email_recipients: List[str]=None, sms_recipients: List[str]=None):  # noqa: E501
        """NotificationStatus - a model defined in Swagger

        :param subject: The subject of this NotificationStatus.  # noqa: E501
        :type subject: str
        :param _from: The _from of this NotificationStatus.  # noqa: E501
        :type _from: str
        :param timestamp: The timestamp of this NotificationStatus.  # noqa: E501
        :type timestamp: int
        :param status: The status of this NotificationStatus.  # noqa: E501
        :type status: str
        :param sent_on: The sent_on of this NotificationStatus.  # noqa: E501
        :type sent_on: int
        :param email_recipients: The email_recipients of this NotificationStatus.  # noqa: E501
        :type email_recipients: List[str]
        :param sms_recipients: The sms_recipients of this NotificationStatus.  # noqa: E501
        :type sms_recipients: List[str]
        """
        self.swagger_types = {
            'subject': str,
            '_from': str,
            'timestamp': int,
            'status': str,
            'sent_on': int,
            'email_recipients': List[str],
            'sms_recipients': List[str]
        }

        self.attribute_map = {
            'subject': 'subject',
            '_from': 'from',
            'timestamp': 'timestamp',
            'status': 'status',
            'sent_on': 'sentOn',
            'email_recipients': 'emailRecipients',
            'sms_recipients': 'smsRecipients'
        }

        self._subject = subject
        self.__from = _from
        self._timestamp = timestamp
        self._status = status
        self._sent_on = sent_on
        self._email_recipients = email_recipients
        self._sms_recipients = sms_recipients

    @classmethod
    def from_dict(cls, dikt) -> 'NotificationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NotificationStatus of this NotificationStatus.  # noqa: E501
        :rtype: NotificationStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subject(self) -> str:
        """Gets the subject of this NotificationStatus.


        :return: The subject of this NotificationStatus.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject: str):
        """Sets the subject of this NotificationStatus.


        :param subject: The subject of this NotificationStatus.
        :type subject: str
        """

        self._subject = subject

    @property
    def _from(self) -> str:
        """Gets the _from of this NotificationStatus.


        :return: The _from of this NotificationStatus.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from: str):
        """Sets the _from of this NotificationStatus.


        :param _from: The _from of this NotificationStatus.
        :type _from: str
        """

        self.__from = _from

    @property
    def timestamp(self) -> int:
        """Gets the timestamp of this NotificationStatus.

        This parameter is optional and is for scheduling an e-mail in the future  # noqa: E501

        :return: The timestamp of this NotificationStatus.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: int):
        """Sets the timestamp of this NotificationStatus.

        This parameter is optional and is for scheduling an e-mail in the future  # noqa: E501

        :param timestamp: The timestamp of this NotificationStatus.
        :type timestamp: int
        """

        self._timestamp = timestamp

    @property
    def status(self) -> str:
        """Gets the status of this NotificationStatus.


        :return: The status of this NotificationStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this NotificationStatus.


        :param status: The status of this NotificationStatus.
        :type status: str
        """

        self._status = status

    @property
    def sent_on(self) -> int:
        """Gets the sent_on of this NotificationStatus.

        This parameter has the timestamp of the time an e-mail notification has been sent, otherwise it returns 0  # noqa: E501

        :return: The sent_on of this NotificationStatus.
        :rtype: int
        """
        return self._sent_on

    @sent_on.setter
    def sent_on(self, sent_on: int):
        """Sets the sent_on of this NotificationStatus.

        This parameter has the timestamp of the time an e-mail notification has been sent, otherwise it returns 0  # noqa: E501

        :param sent_on: The sent_on of this NotificationStatus.
        :type sent_on: int
        """

        self._sent_on = sent_on

    @property
    def email_recipients(self) -> List[str]:
        """Gets the email_recipients of this NotificationStatus.


        :return: The email_recipients of this NotificationStatus.
        :rtype: List[str]
        """
        return self._email_recipients

    @email_recipients.setter
    def email_recipients(self, email_recipients: List[str]):
        """Sets the email_recipients of this NotificationStatus.


        :param email_recipients: The email_recipients of this NotificationStatus.
        :type email_recipients: List[str]
        """

        self._email_recipients = email_recipients

    @property
    def sms_recipients(self) -> List[str]:
        """Gets the sms_recipients of this NotificationStatus.


        :return: The sms_recipients of this NotificationStatus.
        :rtype: List[str]
        """
        return self._sms_recipients

    @sms_recipients.setter
    def sms_recipients(self, sms_recipients: List[str]):
        """Sets the sms_recipients of this NotificationStatus.


        :param sms_recipients: The sms_recipients of this NotificationStatus.
        :type sms_recipients: List[str]
        """

        self._sms_recipients = sms_recipients
