# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Service(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, sms: str=None, mail: str=None):  # noqa: E501
        """Service - a model defined in Swagger

        :param sms: The sms of this Service.  # noqa: E501
        :type sms: str
        :param mail: The mail of this Service.  # noqa: E501
        :type mail: str
        """
        self.swagger_types = {
            'sms': str,
            'mail': str
        }

        self.attribute_map = {
            'sms': 'sms',
            'mail': 'mail'
        }

        self._sms = sms
        self._mail = mail

    @classmethod
    def from_dict(cls, dikt) -> 'Service':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Service of this Service.  # noqa: E501
        :rtype: Service
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sms(self) -> str:
        """Gets the sms of this Service.


        :return: The sms of this Service.
        :rtype: str
        """
        return self._sms

    @sms.setter
    def sms(self, sms: str):
        """Sets the sms of this Service.


        :param sms: The sms of this Service.
        :type sms: str
        """

        self._sms = sms

    @property
    def mail(self) -> str:
        """Gets the mail of this Service.


        :return: The mail of this Service.
        :rtype: str
        """
        return self._mail

    @mail.setter
    def mail(self, mail: str):
        """Sets the mail of this Service.


        :param mail: The mail of this Service.
        :type mail: str
        """

        self._mail = mail
