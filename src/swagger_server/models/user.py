# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, username: str=None, email: str=None, phone: str=None, sms: bool=None, mail: bool=None):  # noqa: E501
        """User - a model defined in Swagger

        :param username: The username of this User.  # noqa: E501
        :type username: str
        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param phone: The phone of this User.  # noqa: E501
        :type phone: str
        :param sms: The sms of this User.  # noqa: E501
        :type sms: bool
        :param mail: The mail of this User.  # noqa: E501
        :type mail: bool
        """
        self.swagger_types = {
            'username': str,
            'email': str,
            'phone': str,
            'sms': bool,
            'mail': bool
        }

        self.attribute_map = {
            'username': 'username',
            'email': 'email',
            'phone': 'phone',
            'sms': 'sms',
            'mail': 'mail'
        }

        self._username = username
        self._email = email
        self._phone = phone
        self._sms = sms
        self._mail = mail

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username

    @property
    def email(self) -> str:
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def phone(self) -> str:
        """Gets the phone of this User.


        :return: The phone of this User.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this User.


        :param phone: The phone of this User.
        :type phone: str
        """

        self._phone = phone

    @property
    def sms(self) -> bool:
        """Gets the sms of this User.


        :return: The sms of this User.
        :rtype: bool
        """
        return self._sms

    @sms.setter
    def sms(self, sms: bool):
        """Sets the sms of this User.


        :param sms: The sms of this User.
        :type sms: bool
        """

        self._sms = sms

    @property
    def mail(self) -> bool:
        """Gets the mail of this User.


        :return: The mail of this User.
        :rtype: bool
        """
        return self._mail

    @mail.setter
    def mail(self, mail: bool):
        """Sets the mail of this User.


        :param mail: The mail of this User.
        :type mail: bool
        """

        self._mail = mail
