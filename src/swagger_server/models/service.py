# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Service(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, sms: bool=None, email: bool=None):  # noqa: E501
        """Service - a model defined in Swagger

        :param sms: The sms of this Service.  # noqa: E501
        :type sms: bool
        :param email: The email of this Service.  # noqa: E501
        :type email: bool
        """
        self.swagger_types = {
            'sms': bool,
            'email': bool
        }

        self.attribute_map = {
            'sms': 'sms',
            'email': 'email'
        }

        self._sms = sms
        self._email = email

    @classmethod
    def from_dict(cls, dikt) -> 'Service':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Service of this Service.  # noqa: E501
        :rtype: Service
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sms(self) -> bool:
        """Gets the sms of this Service.


        :return: The sms of this Service.
        :rtype: bool
        """
        return self._sms

    @sms.setter
    def sms(self, sms: bool):
        """Sets the sms of this Service.


        :param sms: The sms of this Service.
        :type sms: bool
        """

        self._sms = sms

    @property
    def email(self) -> bool:
        """Gets the email of this Service.


        :return: The email of this Service.
        :rtype: bool
        """
        return self._email

    @email.setter
    def email(self, email: bool):
        """Sets the email of this Service.


        :param email: The email of this Service.
        :type email: bool
        """

        self._email = email
